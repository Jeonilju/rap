package com.klt.activity;

import java.io.IOException;

import org.apache.http.client.methods.HttpRequestBase;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Dialog;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.NumberPicker;
import android.widget.Toast;
import android.widget.NumberPicker.OnValueChangeListener;

import com.klt.BaseActivity;
import com.klt.R;
import com.klt.connectior.KLTAPIs;
import com.klt.connectior.KLTAPIs_Order;
import com.klt.connectior.KLTHttpClient;

public class SearchOrderActivity extends BaseActivity {

	Button btn_search, btn_search_address, btn_search_height, btn_search_unsolved;
	EditText etHeight, etAddress, etAll;
	
	private int hight1 = 1, hight2 = 1;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		setContentView(R.layout.activity_search_order);
		setTitle(getString(R.string.title_search_order));
		super.onCreate(savedInstanceState, this);
		
		initResource();
		initEvent();
	}

	private void initResource(){
		btn_search = (Button) findViewById(R.id.search_order_btn_req); 
		btn_search_address = (Button) findViewById(R.id.search_order_btn_location);
		btn_search_height = (Button) findViewById(R.id.search_order_btn_height);
		btn_search_unsolved = (Button) findViewById(R.id.search_order_btn_incompletion);
		
		etHeight	=	(EditText) findViewById(R.id.search_order_et_height);
		etAddress	=	(EditText) findViewById(R.id.search_order_et_location);
		etAll		=	(EditText) findViewById(R.id.search_order_et_incompletion);
	}
	
	private void initEvent(){
		btn_search.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				//Intent intent = new Intent(SearchOrderActivity.this, OrderListActivity.class);
				//startActivity(intent);
				
				String address = etAddress.getText().toString();
				String height = etHeight.getText().toString();
				
				Log.i(TAG, "address: " + address);
				Log.i(TAG, "height: " + height);
				if(address.equals("") &&  height.equals("")){
					Toast.makeText(SearchOrderActivity.this, "검색 조건을 입력해주세요.", Toast.LENGTH_SHORT).show();
				}
				else{
					try {
						
						if(height.equals("")){
							// address 보내기
							HttpRequestBase req = KLTAPIs_Order.getOrderInfo_Address(address);
							KLTHttpClient.getInstance().background(req, orderResult);
							return;
						}
						if(address.equals("")){
							// height 보내기
							String height_[] = height.split(" ~ ");
							int height1 = Integer.parseInt(height_[0]);
							int height2 = Integer.parseInt(height_[1]);
							HttpRequestBase req = KLTAPIs_Order.getOrderInfo_Floor(height2, height1);
							KLTHttpClient.getInstance().background(req, orderResult);
							
							return;
						}
						String height_[] = height.split(" ~ ");
						int height1 = Integer.parseInt(height_[0]);
						int height2 = Integer.parseInt(height_[1]);
						
//						// 둘다.
						HttpRequestBase req = KLTAPIs_Order.getOrderInfo_Total(address,height2, height1);
						KLTHttpClient.getInstance().background(req, orderResult);
					} catch (IOException e) {
						e.printStackTrace();
					} catch (JSONException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
			}
		});
		
		btn_search_address.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				String address = etAddress.getText().toString();
				if(address.equals("")){
					Toast.makeText(SearchOrderActivity.this, "지역을 설정해주세요.", Toast.LENGTH_SHORT).show();
				}
				else{
					try {
						HttpRequestBase req = KLTAPIs.getOrderInfo_Address(address);
						KLTHttpClient.getInstance().background(req, orderResult);
					} catch (IOException e) {
						e.printStackTrace();
					} catch (JSONException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		});

		btn_search_height.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				String height = etHeight.getText().toString();
				//height.contains("~");
				if(!height.contains("~")){
					Toast.makeText(SearchOrderActivity.this, "높이를 설정해주세요.", Toast.LENGTH_SHORT).show();
				}
				else{
					try {
						String height_[] = height.split(" ~ ");
						int height1 = Integer.parseInt(height_[0]);
						int height2 = Integer.parseInt(height_[1]);
						HttpRequestBase req = KLTAPIs.getOrderInfo_Floor(height2, height1);
						KLTHttpClient.getInstance().background(req, orderResult);
					} catch (IOException e) {
						e.printStackTrace();
					} catch (JSONException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		});
		
		btn_search_unsolved.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				try {
					HttpRequestBase req = KLTAPIs.getOrderInfo_Unsolved();
					KLTHttpClient.getInstance().background(req, orderResult);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		});
		
		etAddress.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(SearchOrderActivity.this, AddressActivity.class);
				intent.putExtra("type", "2");
				startActivity(intent);

				AddressActivity.setHandler(new Handler() {
					@Override
					public void handleMessage(Message msg) {
						Bundle bundle = msg.getData();
						String address = bundle.getString("Address");

						etAddress.setText(address);
					}
				});
			}
		});
		
		etHeight.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				showHightDig();
			}
		});
		
		etAll.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				try {
					HttpRequestBase req = KLTAPIs.getOrderInfo_Unsolved();
					KLTHttpClient.getInstance().background(req, orderResult);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	private void showHightDig() {
		final Dialog d = new Dialog(SearchOrderActivity.this);

		d.setTitle("높이 설정");
		d.setContentView(R.layout.dialog_number_picker2);

		Button b1 = (Button) d.findViewById(R.id.numberPicker_btn_cancel);
		Button b2 = (Button) d.findViewById(R.id.numberPicker_btn_set);
		NumberPicker np = (NumberPicker) d.findViewById(R.id.numberPicker1);
		NumberPicker np2 = (NumberPicker) d.findViewById(R.id.numberPicker2);

		np.setMaxValue(50); // max value 100
		np.setMinValue(1); // min value 0
		np.setWrapSelectorWheel(true);

		np2.setMaxValue(50); // max value 100
		np2.setMinValue(1); // min value 0
		np2.setWrapSelectorWheel(true);

		np.setOnValueChangedListener(new OnValueChangeListener() {

			@Override
			public void onValueChange(NumberPicker picker, int oldVal,
					int newVal) {
				hight1 = newVal;
				// etHeight.setText("" + newVal);
			}
		});

		np2.setOnValueChangedListener(new OnValueChangeListener() {

			@Override
			public void onValueChange(NumberPicker picker, int oldVal,
					int newVal) {
				hight2 = newVal;
				// etHeight.setText("" + newVal);
			}
		});

		b1.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				d.dismiss();
			}
		});
		b2.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				etHeight.setText(hight1 + " ~ " + hight2);
				d.dismiss();
			}
		});
		d.show();
	}
	
	@Override
	protected void onResume() {
		super.onResume();
	}

	Handler orderResult = new Handler(){
		@Override
		public void handleMessage(Message msg){
			if(msg.what == -1) {
				Toast.makeText(SearchOrderActivity.this, "연결 실패 \n잠시후에 다시 시도해주세요.", Toast.LENGTH_SHORT).show();
			}
			else{
				int status;
				try {
					JSONObject json = new JSONObject(msg.getData().getString("res"));
					status = json.getInt("httpStatusCode");
					
					switch (status) {
					case 200:
						
						Intent intent = new Intent(SearchOrderActivity.this, OrderListActivity.class);
						intent.putExtra("data", msg.getData().getString("res"));
						startActivity(intent);
						
						break;
					case 404:
						Toast.makeText(SearchOrderActivity.this, "검색조건을 입력해주세요.", Toast.LENGTH_SHORT).show();
						break;
					default:
						break;
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
				
			}
		}
	};
}
