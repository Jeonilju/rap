package com.klt.connectior;

import java.io.UnsupportedEncodingException;
import java.util.Calendar;
import java.util.TimeZone;

import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpRequestBase;
import org.apache.http.entity.StringEntity;
import org.apache.http.protocol.HTTP;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

import com.google.gson.Gson;
import com.klt.data.OrderInfo;
import com.klt.data.SearchInfo;
import com.klt.data.UserInfo;
import com.klt.setting.Conf;

public class KLTAPIs_Order {

	private static final String TAG = "KLTAPIs_Order";

	/** 오더 등록 */
	public static HttpRequestBase OrderRegister(String username, String password,
			String date, float ton, int floor, String phone, String address,
			String detail_address, int price)
			throws UnsupportedEncodingException {

		int year = Integer.parseInt(date.substring(0, date.indexOf("-")));
		date = date.substring(date.indexOf("-") + 1);
		int month = Integer.parseInt(date.substring(0, date.indexOf("-")));
		date = date.substring(date.indexOf("-") + 1);
		int day = Integer.parseInt(date);
		
		String timestamp = year + "-";
		if(month > 9)
			timestamp +=month + "-";
		else
			timestamp += "0" + month + "-";
		
		if(day > 9)
			timestamp += day;
		else
			timestamp += "0" + day;
		
		
		java.sql.Timestamp ts2 = java.sql.Timestamp.valueOf( timestamp + " 00:00:00");
	    long tsTime2 = ts2.getTime() / 1000L;

	    Log.i(TAG, "작업일: " + tsTime2);
		
		OrderInfo info = new OrderInfo();
		info.username = username;
		info.password = password;
		info.date = tsTime2;
		info.ton = ton;
		info.floor = floor;
		info.phone = phone;
		info.address = address + " " + detail_address;
		info.main_address = address;
		info.detail_address = detail_address;
		info.price = price;
		info.fee_rate = 10;
		
		String json = new Gson().toJson(info);

		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/order/write/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, HTTP.UTF_8);
		httpPost.setEntity(entity);

		return httpPost;
	}
	
	/** 가격 가져오기 */
	public static HttpRequestBase getPay(float ton, int floor, String main_address)
			throws UnsupportedEncodingException {
		
		OrderInfo info = new OrderInfo();
		info.ton = ton;
		info.floor = floor;
		info.address = main_address;
		
		String json = new Gson().toJson(info);
		Log.e("URL: ", KLTHttpClient.getBaseURL() + "/price/calc/");
		Log.e("json: ", json);
		
		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/price/calc/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, HTTP.UTF_8);
		httpPost.setEntity(entity);
		
		return httpPost;
	}
	
	/** 오더 신청 */
	public static HttpRequestBase OrderRequest(int index, String username, String password)
			throws UnsupportedEncodingException {
		
		UserInfo info = new UserInfo();
		info.username = username;
		info.orderee = username;
		info.password = password;
		
		String json = new Gson().toJson(info);

		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/order/" + index + "/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, "utf-8");
		httpPost.setEntity(entity);

		return httpPost;
	}
	
	/**  오더 가져오기 */
	public static HttpRequestBase getOrderInfo() throws UnsupportedEncodingException {
		SearchInfo info = new SearchInfo();
		info.total = "total";
		
		String json = new Gson().toJson(info);

		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/order/search/" + 1 + "/" + 51  + "/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, "utf-8");
		httpPost.setEntity(entity);
		
		return httpPost;
	}
	
	/**  오더 가져오기 */
	public static HttpRequestBase getOrderInfo(int index) {
		HttpGet httpGet = new HttpGet(KLTHttpClient.getBaseURL() + "/orders/" + index + "/");
		return httpGet;
	}
	
	/**  오더 지역 지역으로 검색  
	 * @throws JSONException */
	public static HttpRequestBase getOrderInfo_Address(String address) throws UnsupportedEncodingException, JSONException{
		SearchInfo info = new SearchInfo();
		info.address = address;
		
		JSONObject obj = new JSONObject();
		obj.put("address", address);
		
		String json = obj.toString();//new Gson().toJson(info);

		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/order/search/" + 1 + "/" + 51  + "/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, "utf-8");
		httpPost.setEntity(entity);
		
		return httpPost;
	}
	
	/**  오더 지역 높이로 검색   
	 * @throws JSONException */
	public static HttpRequestBase getOrderInfo_Floor(int max, int min) throws UnsupportedEncodingException, JSONException{
		SearchInfo info = new SearchInfo();
		info.floor = "floor";
		info.max = max;
		info.min = min;
		
		JSONObject floor = new JSONObject();
		floor.put("max", max);
		floor.put("min", min);
		
		JSONObject obj = new JSONObject();
		obj.put("floor", floor);
		
		String json = obj.toString();//new Gson().toJson(info);
		Log.i(TAG, "Json: " + json);
		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/order/search/" + 1 + "/" + 51  + "/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, "utf-8");
		httpPost.setEntity(entity);
		
		return httpPost;
	}
	
	/**  오더 미해결 검색 
	 * @throws UnsupportedEncodingException */
	public static HttpRequestBase getOrderInfo_Unsolved() throws UnsupportedEncodingException{
		SearchInfo info = new SearchInfo();
		info.unsolved = "unsolved";
		
		String json = new Gson().toJson(info);

		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/order/search/" + 1 + "/" + 51  + "/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, "utf-8");
		httpPost.setEntity(entity);
		
		return httpPost;
	}
	
	/**  오더 지역 조건 2개로 검색  */
	public static HttpRequestBase getOrderInfo_Total(String main_address, int max, int min) throws UnsupportedEncodingException, JSONException{
		SearchInfo info = new SearchInfo();
		info.address = main_address;
		info.floor = "floor";
		info.max = max;
		info.min = min;
		
		JSONObject floor = new JSONObject();
		floor.put("max", max);
		floor.put("min", min);
		
		JSONObject obj = new JSONObject();
		obj.put("floor", floor);
		obj.put("address", main_address);
		
		String json = obj.toString();//new Gson().toJson(info);

		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/order/search/" + 1 + "/" + 51  + "/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, "utf-8");
		httpPost.setEntity(entity);
		
		return httpPost;
	}
	
	/** 오더 작업 상태 변경 
	 * @param status 0: 배차 대기중, 1: 작업중, 2: 배차 완료 
	 *  */
	public static HttpRequestBase changeOrderStatus(int index, String username, String password, int status) throws UnsupportedEncodingException{
		UserInfo info = new UserInfo();
		info.username = username;
		info.password = password;
		info.status = status;
		
		String json = new Gson().toJson(info);

		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/order/" + index + "/status/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, "utf-8");
		httpPost.setEntity(entity);

		return httpPost;
	}
	
}
