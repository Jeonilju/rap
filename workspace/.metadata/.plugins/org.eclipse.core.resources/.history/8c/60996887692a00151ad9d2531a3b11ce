package com.klt.activity;

import java.io.IOException;
import java.util.ArrayList;

import org.apache.http.client.methods.HttpRequestBase;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnDismissListener;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.widget.ListView;
import android.widget.Toast;

import com.klt.BaseActivity;
import com.klt.R;
import com.klt.connectior.KLTAPIs;
import com.klt.connectior.KLTAPIs_Mypage;
import com.klt.connectior.KLTHttpClient;
import com.klt.data.OrderInfo;
import com.klt.setting.Conf;
import com.klt.setting.Preference;
import com.klt.view.OrderListAdapter;
import com.klt.view.OrdereeListAdapter;
import com.klt.view.OrdererListAdapter;

public class MyPageActivity extends BaseActivity{

	private boolean isOrder = true;
	
	private ListView lvBreakDownList;
	
	private ArrayList<OrderInfo> adapterAddList;
	private ArrayList<OrderInfo> adapterSelectList;
	private OrdererListAdapter adapterAdd;
	private OrdereeListAdapter adapterSelect;
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		setContentView(R.layout.activity_mypage);
		setTitle(getString(R.string.mypage_title));
		super.onCreate(savedInstanceState, this);
		
		isOrder = getIntent().getBooleanExtra("isOrder", true);
		
		initResource();
		initEvent();
	}

	private void initResource(){
		lvBreakDownList	=	(ListView) findViewById(R.id.mypage_list);
		
		adapterAddList = new ArrayList<OrderInfo>();
		adapterSelectList = new ArrayList<OrderInfo>();
		
		adapterAdd = new OrdererListAdapter(MyPageActivity.this, adapterAddList);
		adapterSelect = new OrdereeListAdapter(MyPageActivity.this, adapterSelectList);
		
		if(isOrder){
			initData_Order();
			lvBreakDownList.setAdapter(adapterSelect);
		}
		else{
			initData_Select();
			lvBreakDownList.setAdapter(adapterAdd);
		}
	}
	
	private void initEvent(){
	}
	
	@Override
	protected void onResume() {
		super.onResume();
	}
	
	private void initData_Select(){
		
		try {
			HttpRequestBase req1 = KLTAPIs_Mypage.getMypageSelect(1, 51);
			KLTHttpClient.getInstance().background(req1, myPage_Select_Callback);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private void initData_Order(){
		
		try {
			HttpRequestBase req2 = KLTAPIs_Mypage.getMypageOrder(1, 51);
			KLTHttpClient.getInstance().background(req2, myPage_Order_Callback);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	Handler myPage_Select_Callback = new Handler(){
		@Override
		public void handleMessage(Message msg){
			if(msg.what == -1) {
				Toast.makeText(MyPageActivity.this, "연결 실패 \n잠시후에 다시 시도해주세요.", Toast.LENGTH_SHORT).show();
			}
			else{
				try {
					JSONObject json = new JSONObject(msg.getData().getString("res"));
					
					switch (json.getInt("httpStatusCode")) {
					case 200:
						Log.i(TAG, "" + json.toString());
						JSONObject res = new JSONObject(json.getString("res"));
						JSONArray orders = res.getJSONArray("orders");
						
						adapterAddList.clear();
						
						if(orders.length() == 0){
							// 내역 없음
							ShowDig("내역이 없습니다.");
						}
						
						for(int index = 0;index < orders.length();index++){
							JSONObject order = orders.getJSONObject(index);
							
							int id = order.getInt("id");
							String address = order.getString("address");
							String detail_address = order.getString("detail_address");
							int floor = order.getInt("floor");
							String phone = order.getString("phone");
							double date = order.getDouble("applied_at");
							int price = order.getInt("price");
							int status = order.getInt("status");
							double ton = order.getDouble("ton");
							
							adapterAddList.add(new OrderInfo(id, address, detail_address, floor, ton, date, price, status));
						}
						lvBreakDownList.setAdapter(adapterAdd);
						break;
					default:
						Toast.makeText(MyPageActivity.this, "알수없는 요청입니다.\n" + msg.getData().getString("res"), Toast.LENGTH_SHORT).show();
						break;
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
				
			}
		}
	};
	
	Handler myPage_Order_Callback = new Handler(){
		@Override
		public void handleMessage(Message msg){
			if(msg.what == -1) {
				Toast.makeText(MyPageActivity.this, "연결 실패 \n잠시후에 다시 시도해주세요.", Toast.LENGTH_SHORT).show();
			}
			else{
				try {
					JSONObject json = new JSONObject(msg.getData().getString("res"));
					
					switch (json.getInt("httpStatusCode")) {
					case 200:
						Log.i(TAG, "" + json.toString());
						JSONObject res = new JSONObject(json.getString("res"));
						JSONArray orders = res.getJSONArray("orders");
						
						adapterSelectList.clear();
						
						if(orders.length() == 0){
							// 내역 없음
							ShowDig("내역이 없습니다.");
						}
						
						for(int index = 0;index < orders.length();index++){
							JSONObject order = orders.getJSONObject(index);
							
							int id = order.getInt("id");
							String address = order.getString("address");
							String detail_address = order.getString("detail_address");
							int floor = order.getInt("floor");
							String phone = order.getString("phone");
							double date = order.getDouble("created_at");
							int price = order.getInt("price");
							int status = order.getInt("status");
							double ton = order.getDouble("ton");
							
							adapterSelectList.add(new OrderInfo(id, address, detail_address, floor, ton, date, price, status));
						}
						lvBreakDownList.setAdapter(adapterSelect);
						break;
					default:
						Toast.makeText(MyPageActivity.this, "알수없는 요청입니다.\n" + msg.getData().getString("res"), Toast.LENGTH_SHORT).show();
						break;
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
				
			}
		}
	};
	
	private void ShowDig(String message){
		AlertDialog.Builder alt_bld = new AlertDialog.Builder(MyPageActivity.this);
		alt_bld.setMessage(message)
				.setCancelable(false)
				.setPositiveButton(getString(R.string.close),
						new DialogInterface.OnClickListener() {
							public void onClick(DialogInterface dialog,
									int id) {
								
							}
						});

		AlertDialog alert = alt_bld.create();
		
		alert.setOnDismissListener(new OnDismissListener() {
			
			@Override
			public void onDismiss(DialogInterface dialog) {
				finish();
			}
		});
		
		alert.setTitle("");
		alert.show();
	}
	
}
