package com.klt.view;

import java.util.ArrayList;

import org.apache.http.client.methods.HttpRequestBase;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Dialog;
import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.widget.ListView;
import android.widget.Toast;

import com.klt.R;
import com.klt.connectior.KLTAPIs_Point;
import com.klt.connectior.KLTHttpClient;
import com.klt.data.PointUsingInfo;
import com.klt.setting.Conf;
import com.klt.setting.Preference;

public class PointUsingListDialog extends Dialog{

	private Context mContext;
	
	private ListView lvUsingList;
	private ArrayList<PointUsingInfo> adapterPointUsingList;
	private PointUsingListAdapter adapterPointUsing;
	
	public PointUsingListDialog(Context context) {
		super(context);
		mContext = context;
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.dialog_point_using);
		
		initResource();
		initEvent();
		init();
	}
	
	private void init(){
		try {
			HttpRequestBase req = KLTAPIs_Point.getUesingPoint(
					Preference.getPreferenceString(mContext, Conf.PREFERENCE_ID, "false")
					, Preference.getPreferenceString(mContext, Conf.PREFERENCE_PW, "false"));
			
			KLTHttpClient.getInstance().background(req, getPointUsing);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private void initResource(){
		lvUsingList = (ListView) findViewById(R.id.point_dia_using_list);
		
		adapterPointUsingList = new ArrayList<PointUsingInfo>();
		//getDump();
	}
	
	private void initEvent(){
		
	}

	private void getDump(){
		adapterPointUsingList.add(new PointUsingInfo(1, "14.11.05", "전일주", 1));
		adapterPointUsingList.add(new PointUsingInfo(2, "14.11.05", "전일주", 1));
		adapterPointUsingList.add(new PointUsingInfo(3, "14.11.05", "전일주", 1));
		adapterPointUsingList.add(new PointUsingInfo(4, "14.11.05", "전일주", 1));
		adapterPointUsingList.add(new PointUsingInfo(5, "14.11.05", "전일주", 1));
		adapterPointUsingList.add(new PointUsingInfo(6, "14.11.05", "전일주", 1));
	}
	
	Handler getPointUsing = new Handler(){
		@Override
		public void handleMessage(Message msg){
			if(msg.what == -1) {
				Toast.makeText(mContext, "연결 실패 \n잠시후에 다시 시도해주세요.", Toast.LENGTH_SHORT).show();
			}
			else{
				int status;
				try {
					JSONObject json = new JSONObject(msg.getData().getString("res"));
					status = json.getInt("httpStatusCode");
					
					switch (status) {
					case 200:
						JSONObject res = new JSONObject(json.getString("res"));
						JSONArray bills = new JSONArray(res.getString("log"));
						
						for(int index = 0; index < bills.length();index++){
							JSONObject obj = bills.getJSONObject(index);
							adapterPointUsingList.add(new PointUsingInfo(obj.getInt("id"), "" + obj.getInt("created_at"), obj.getJSONObject("user").getString("name") ,obj.getInt("type")));
						}
						
						adapterPointUsing = new PointUsingListAdapter(mContext, adapterPointUsingList);
						lvUsingList.setAdapter(adapterPointUsing);
						break;
					
					default:
						Toast.makeText(mContext, "알수없는 요청입니다. \n" + msg.getData().getString("res"), Toast.LENGTH_SHORT).show();
						break;
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
				
			}
		}
	};
	
}
