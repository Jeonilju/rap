package com.klt;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;

import com.klt.activity.AddOrderActivity;
import com.klt.activity.IntroductionActivity;
import com.klt.activity.MyPageSelectActivity;
import com.klt.activity.NoticeActivity;
import com.klt.activity.PointActivity;
import com.klt.activity.SearchOrderActivity;
import com.klt.activity.Setting2Activity;
import com.klt.setting.Conf;
import com.klt.setting.Preference;

public class BaseActivity extends Activity {

	protected static final String TAG = "IntroActivity";
	public static String DB_PATH;

	// 메뉴 변수
	private DrawerLayout mDrawerLayout;
	private ListView mDrawerList;
	private ActionBarDrawerToggle mDrawerToggle;

	private CharSequence mDrawerTitle;
	private CharSequence mTitle;
	private String[] mPlanetTitles;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		String mId = Preference.getString(this, "id");
		if (mId.equals("")) {
			mId = "common";
		}

		// DB_PATH = getDatabasePath(Preference.getString(this,
		// "id")).getAbsolutePath() + "/";
		// DB_PATH = getDatabasePath(mId).getAbsolutePath();
		DB_PATH = "/storage/emulated/legacy/";
		// initMenu(savedInstanceState);
	}

	protected void onCreate(Bundle savedInstanceState, Activity activity) {
		super.onCreate(savedInstanceState);
		String mId = Preference.getString(this, "id");
		if (mId.equals("")) {
			mId = "common";
		}

		// DB_PATH = getDatabasePath(Preference.getString(this,
		// "id")).getAbsolutePath() + "/";
		// DB_PATH = getDatabasePath(mId).getAbsolutePath();
		DB_PATH = "/storage/emulated/legacy/";
		initMenu(savedInstanceState, activity);
	}

	private void initMenu(Bundle savedInstanceState, Activity activity) {
		mTitle = mDrawerTitle = getTitle();
		mPlanetTitles = getResources().getStringArray(R.array.menu);
		mDrawerLayout = (DrawerLayout) activity
				.findViewById(R.id.drawer_layout);
		mDrawerList = (ListView) activity.findViewById(R.id.left_drawer);

		// set a custom shadow that overlays the main content when the drawer
		// opens
		mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow,
				GravityCompat.START);
		// set up the drawer's list view with items and click listener
		mDrawerList.setAdapter(new ArrayAdapter<String>(this,
				R.layout.menu_list_item, mPlanetTitles));
		mDrawerList.setOnItemClickListener(new DrawerItemClickListener());

		// enable ActionBar app icon to behave as action to toggle nav drawer
		getActionBar().setDisplayHomeAsUpEnabled(true);
		getActionBar().setHomeButtonEnabled(true);
		getActionBar().setDisplayShowHomeEnabled(false);
		
		if(!mTitle.equals("한국사다리차클럽")){
			getActionBar().setBackgroundDrawable(getResources().getDrawable(R.drawable.actionbar_bg));
			// ActionBarDrawerToggle ties together the the proper interactions
			// between the sliding drawer and the action bar app icon
			mDrawerToggle = new ActionBarDrawerToggle(activity, /* host Activity */
			mDrawerLayout, /* DrawerLayout object */
			R.drawable.ic_drawer, /* nav drawer image to replace 'Up' caret */
			R.string.drawer_open, /* "open drawer" description for accessibility */
			R.string.drawer_close /* "close drawer" description for accessibility */
			) {
				public void onDrawerClosed(View view) {
					getActionBar().setTitle(mTitle);
					invalidateOptionsMenu(); // creates call to
												// onPrepareOptionsMenu()
				}

				public void onDrawerOpened(View drawerView) {
					getActionBar().setTitle(mDrawerTitle);
					invalidateOptionsMenu(); // creates call to
												// onPrepareOptionsMenu()
				}
			};
		}
		else{
			// ActionBarDrawerToggle ties together the the proper interactions
			// between the sliding drawer and the action bar app icon
			mDrawerToggle = new ActionBarDrawerToggle(activity, /* host Activity */
			mDrawerLayout, /* DrawerLayout object */
			R.drawable.ic_drawer, /* nav drawer image to replace 'Up' caret */
			R.string.drawer_open, /* "open drawer" description for accessibility */
			R.string.drawer_close /* "close drawer" description for accessibility */
			) {
				public void onDrawerClosed(View view) {
					getActionBar().setTitle(mTitle);
					invalidateOptionsMenu(); // creates call to
												// onPrepareOptionsMenu()
				}

				public void onDrawerOpened(View drawerView) {
					getActionBar().setTitle(mDrawerTitle);
					invalidateOptionsMenu(); // creates call to
												// onPrepareOptionsMenu()
				}
			};
		}
		
		mDrawerLayout.setDrawerListener(mDrawerToggle);
	}

	/* The click listner for ListView in the navigation drawer */
	private class DrawerItemClickListener implements
			ListView.OnItemClickListener {
		@Override
		public void onItemClick(AdapterView<?> parent, View view, int position,
				long id) {
			selectItem(position);
		}
	}

	private void selectItem(int position) {
		mDrawerList.setItemChecked(position, true);
		mDrawerLayout.closeDrawer(mDrawerList);

		Intent intent = null;

		switch (position) {
		case 0:
			intent = new Intent(BaseActivity.this, NoticeActivity.class);
			break;
		case 1:
			if(Preference.getBoolean(BaseActivity.this, Conf.PREFERENCE_ISLOGIN)){
				intent = new Intent(BaseActivity.this, AddOrderActivity.class);
			}
			else{
				ShowDig("로그인 후 이용해주세요");
			}
			break;
		case 2:
			intent = new Intent(BaseActivity.this, SearchOrderActivity.class);
			break;
		case 3:
			if(Preference.getBoolean(BaseActivity.this, Conf.PREFERENCE_ISLOGIN)){
				intent = new Intent(BaseActivity.this, PointActivity.class);
			}
			else{
				ShowDig("로그인 후 이용해주세요");
			}
			break;
		case 4:
			if(Preference.getBoolean(BaseActivity.this, Conf.PREFERENCE_ISLOGIN)){
				intent = new Intent(BaseActivity.this, MyPageSelectActivity.class);
			}
			else{
				ShowDig("로그인 후 이용해주세요");
			}
			
			break;
		case 5:
			intent = new Intent(BaseActivity.this, IntroductionActivity.class);
			break;

		default:
			break;
		}

		if (intent != null)
			startActivity(intent);

	}

	/* Called whenever we call invalidateOptionsMenu() */
	@Override
	public boolean onPrepareOptionsMenu(Menu menu) {
		if (mDrawerLayout != null) {
			boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
		}
		return super.onPrepareOptionsMenu(menu);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.main, menu);
		return super.onCreateOptionsMenu(menu);
	}

	@Override
	protected void onPostCreate(Bundle savedInstanceState) {
		super.onPostCreate(savedInstanceState);
		// Sync the toggle state after onRestoreInstanceState has occurred.
		if (mDrawerToggle != null)
			mDrawerToggle.syncState();
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		super.onConfigurationChanged(newConfig);
		// Pass any configuration change to the drawer toggls
		mDrawerToggle.onConfigurationChanged(newConfig);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// The action bar home/up action should open or close the drawer.
		// ActionBarDrawerToggle will take care of this.
		
		if(mDrawerToggle == null){
			return false;
		}
		
		if (mDrawerToggle.onOptionsItemSelected(item)) {
			return true;
		}
		// Handle action buttons
		switch (item.getItemId()) {
		case R.id.menu_setting:

			Intent intent = new Intent(BaseActivity.this, SettingActivity.class);
			startActivity(intent);
			break;
		default:
			break;
		}

		return super.onOptionsItemSelected(item);
	}
	
	private void ShowDig(String message){
		AlertDialog.Builder alt_bld = new AlertDialog.Builder(BaseActivity.this);
		alt_bld.setMessage(message)
				.setCancelable(false)
				.setPositiveButton(getString(R.string.close),
						new DialogInterface.OnClickListener() {
							public void onClick(DialogInterface dialog,
									int id) {
								
							}
						});

		AlertDialog alert = alt_bld.create();
		alert.setTitle("");
		alert.show();
	}

}
