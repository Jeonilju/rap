package com.klt.setting;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.TimeZone;

import jxl.write.DateTime;
import android.util.Log;

public class Conf {

	private static final String TAG = "Conf";
	
	static public String SERVER_IP = "128.199.166.63";
	static public int SERVER_PORT = 8080;
	
	static public int INTRO_DELAY_TIME = 500;
	static public boolean IS_DEBUG = false;
	
	static public String PREFERENCE_ID = "KLT_ID";
	static public String PREFERENCE_PW = "KLT_PW";
	static public String PREFERENCE_AUTO = "KLT_AUTO";
	static public String PREFERENCE_ISLOGIN = "KLT_LOGIN";
	static public String PREFERENCE_PHONE1 = "KLT_PHONE1";
	static public String PREFERENCE_PHONE2 = "KLT_PHONE2";
	static public String PREFERENCE_PHONE3 = "KLT_PHONE3";
	
	static public String PREFERENCE_ALARM = "KLT_ALARM";
	static public String PREFERENCE_ALARM_SOUND = "KLT_SOUND";
	static public String PREFERENCE_ALARM_VIB = "KLT_VIB";
	
	static public String PREFERENCE_MYPOINT = "MY_POINT";
	
	// 정회원 등록일
	static public String PREFERENCE_REGE_DATE = "KLT_REGE";
	
	public static final String DB_NAME = "KltDB.db";
	
	static public String PHONE = "010-4801-5914";
	
	public static void KLT_Logging(String tag, String msg){
		if(IS_DEBUG){
			Log.i(tag, msg);			
		}
	}
	
	/**
	 * date yyyy-
	 * */
	public static long getTimestamp(String date){
		
		int year = Integer.parseInt(date.substring(0, date.indexOf("-")));
		date = date.substring(date.indexOf("-") + 1);
		int month = Integer.parseInt(date.substring(0, date.indexOf("-")));
		date = date.substring(date.indexOf("-") + 1);
		int day = Integer.parseInt(date);
		
		String timestamp = year + "-";
		if(month > 9)
			timestamp +=month + "-";
		else
			timestamp += "0" + month + "-";
		
		if(day > 9)
			timestamp += day;
		else
			timestamp += "0" + day;
		
		
		java.sql.Timestamp ts2 = java.sql.Timestamp.valueOf( timestamp + " 00:00:00");
	    long tsTime2 = ts2.getTime() / 1000L;
	    
	    return tsTime2;
	}
	
	public static Date getDateTime(long timestamp){
		timestamp *= 1000L;
		Timestamp stamp = new Timestamp(timestamp);
		Date date = new Date(timestamp);
		java.util.Date time = new java.util.Date((long)timestamp*1000);
		
		Log.i(TAG, "" + time);
		
		return date;
	}
	
	public static String sha1(String s) {
		try {
			// Create MD5 Hash
			MessageDigest digest = MessageDigest.getInstance("SHA-1");
			digest.update(s.getBytes());
			byte messageDigest[] = digest.digest();

			// Create Hex String
			StringBuffer hexString = new StringBuffer();
			for (int i = 0; i < messageDigest.length; i++)
				hexString.append(Integer.toHexString(0xFF & messageDigest[i]));
			return hexString.toString();

		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
		return "";
	}
	
	// Local Time -> UTC/GMT Time
	public static long convertLocalTimeToUTC(long pv_localDateTime)
	{
	    long lv_UTCTime = pv_localDateTime;
	    
	    TimeZone z = TimeZone.getDefault();
	    //int offset = z.getRawOffset(); // The offset not includes daylight savings time
	    int offset = z.getOffset(pv_localDateTime); // The offset includes daylight savings time
	    lv_UTCTime = pv_localDateTime - offset;
	    return lv_UTCTime / 1000L;
	}
}
