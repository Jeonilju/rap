package com.klt.connectior;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;

import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpDelete;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.client.methods.HttpRequestBase;
import org.apache.http.entity.StringEntity;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

import com.google.gson.Gson;
import com.klt.data.OrderInfo;
import com.klt.data.SearchInfo;
import com.klt.data.UserInfo;
import com.klt.setting.SimpleSHA1;

public class KLTAPIs {

	private static final String TAG = "KLTAPIs";
	
	/** 유저 정보 수정 */
	public static HttpRequestBase updateUserInfo(String name, String username, String password, String car_num
			, String address, String office) throws UnsupportedEncodingException{
		String url = URLEncoder.encode(KLTHttpClient.getBaseURL() + "/user/" + username + "/");
		HttpPut httpPut = new HttpPut(url);
		
		ArrayList<NameValuePair> pairs = new ArrayList<NameValuePair>();
		
		if(!name.equals(""))
			pairs.add(new BasicNameValuePair("name", name));
		if(!username.equals(""))
			pairs.add(new BasicNameValuePair("username", username));
		if(!password.equals(""))
			pairs.add(new BasicNameValuePair("password", password));
		if(!car_num.equals(""))
			pairs.add(new BasicNameValuePair("car_num", car_num));
		if(!address.equals(""))
			pairs.add(new BasicNameValuePair("address", address));
		if(!office.equals(""))
			pairs.add(new BasicNameValuePair("office", office));
		
		httpPut.setEntity(new UrlEncodedFormEntity(pairs));
		
		return httpPut;
	}
	
	/** 회원 탈퇴 */
	public static HttpRequestBase deleteUser(String password) {
		HttpDelete httpDelete = new HttpDelete(KLTHttpClient.getBaseURL() + "/user/");
		httpDelete.getParams().setParameter("password", password);
		httpDelete.setHeader("Content-Type", "application/x-www-form-urlencoded");
		
		return httpDelete;
	}
	
	
//	/** 유저 정보 가져오기 */
//	public static HttpRequestBase getUserInfo(String username){
//		HttpGet httpGet = new HttpGet(KLTHttpClient.getBaseURL() + "/user/" + username + "/");
//		return httpGet;
//	}
	
	/////////////////////////////////////////////////////////////////////////////////////
	////////////															/////////////
	////////////						공지 사항								/////////////
	////////////															/////////////
	/////////////////////////////////////////////////////////////////////////////////////
	
	/** 모든 공지사항 조회 */
	public static HttpRequestBase getNotificationAll(){
		HttpGet httpGet = new HttpGet(KLTHttpClient.getBaseURL() + "/notifications/1/51/");
		return httpGet;
	}
	
	/** 특정 공지사항 조회 */
	public static HttpRequestBase getNotification(int index){
		HttpGet httpGet = new HttpGet(KLTHttpClient.getBaseURL() + "/notifications/" + index + "/");
		return httpGet;
	}
	
	/////////////////////////////////////////////////////////////////////////////////////
	////////////															/////////////
	////////////							소재지							/////////////
	////////////															/////////////
	/////////////////////////////////////////////////////////////////////////////////////
	
	/** 특정 공지사항 조회 */
	public static HttpRequestBase getOfficeList(){
		HttpGet httpGet = new HttpGet(KLTHttpClient.getBaseURL() + "/offices/");
		return httpGet;
	}
	
	/////////////////////////////////////////////////////////////////////////////////////
	////////////															/////////////
	////////////							추천인 코드							/////////////
	////////////															/////////////
	/////////////////////////////////////////////////////////////////////////////////////
	
	/** 특정 공지사항 조회 */
	public static HttpRequestBase getAdminCodeList(){
		HttpGet httpGet = new HttpGet(KLTHttpClient.getBaseURL() + "/admin_codes/");
		return httpGet;
	}
	
	/////////////////////////////////////////////////////////////////////////////////////
	////////////															/////////////
	////////////						테스트								/////////////
	////////////															/////////////
	/////////////////////////////////////////////////////////////////////////////////////
	/**  TEST PUSH */
	public static HttpRequestBase testPush(){
		HttpGet httpGet = new HttpGet(KLTHttpClient.getBaseURL() + "/push/");
		return httpGet;
	}
	
	/////////////////////////////////////////////////////////////////////////////////////
	////////////															/////////////
	////////////						관심 지역 설정							/////////////
	////////////															/////////////
	/////////////////////////////////////////////////////////////////////////////////////
	/**
	 * 관심지역 등록
	 * @throws UnsupportedEncodingException 
	 * */
	public static HttpRequestBase AddInterestAddress(String username, String address) throws UnsupportedEncodingException {

		UserInfo userObj = new UserInfo();
		userObj.username = username;
		userObj.address = address;
		
		String json = new Gson().toJson(userObj);
		Log.i(TAG, "json: " + json);
		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/interest_address/add/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, HTTP.UTF_8);
		httpPost.setEntity(entity);

		return httpPost;
	}
	
	/**
	 * 관심지역 삭제
	 * @throws UnsupportedEncodingException 
	 * */
	public static HttpRequestBase RemoveInterestAddress(String username, String address) throws UnsupportedEncodingException {

		UserInfo userObj = new UserInfo();
		userObj.username = username;
		userObj.address = address;
		
		String json = new Gson().toJson(userObj);
		Log.i(TAG, "json: " + json);
		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/interest_address/delete/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, HTTP.UTF_8);
		httpPost.setEntity(entity);

		return httpPost;
	}
	
	/**
	 * 관심지역 조회
	 * @throws UnsupportedEncodingException 
	 * */
	public static HttpRequestBase SearchInterestAddress(String username) throws UnsupportedEncodingException {

		UserInfo userObj = new UserInfo();
		userObj.username = username;
		
		String json = new Gson().toJson(userObj);
		HttpPost httpPost = new HttpPost(KLTHttpClient.getBaseURL() + "/interest_address/");
		httpPost.setHeader("Content-Type", "application/json");
		StringEntity entity = new StringEntity(json, HTTP.UTF_8);
		httpPost.setEntity(entity);

		return httpPost;
	}
}
